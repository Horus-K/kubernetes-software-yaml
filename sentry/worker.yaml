apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker
  namespace: sentry
  labels:
    app: worker
spec:
  replicas: 3
  selector:
    matchLabels:
      app: worker
  template:
    metadata:
      labels:
        app: worker
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: sentry-data
        - name: config
          persistentVolumeClaim:
            claimName: sentry-conf
      initContainers:
        - name: init-sysctl
          image: 'registry-vpc.cn-hangzhou.aliyuncs.com/acs/busybox:v1.29.2'
          command:
            - /bin/sh
            - '-c'
            - |
              mount -o remount rw /proc/sys
              sysctl -w net.core.somaxconn=65535
              sysctl -w net.ipv4.ip_local_port_range="1024 65535"
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              add:
                - SYS_ADMIN
              drop:
                - ALL
      containers:
        - name: worker
          image: >-
            registry-vpc.cn-hangzhou.aliyuncs.com/nbugs-share/sentry:sentry-onpremise-local-v1-githubusercontent
          command:
            - /bin/sh
          args:
            - '-c'
            - exec /docker-entrypoint.sh $0 $@
            - run
            - worker
          env:
            - name: SENTRY_CONF
              value: /etc/sentry
            - name: SNUBA
              value: 'http://snuba-api:1218'
          resources:
            limits:
              cpu: '4'
              memory: 6Gi
            requests:
              cpu: '4'
              memory: 6Gi
          volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: /etc/sentry
          readinessProbe:
            exec:
              command:
                - sleep
                - '5'
            initialDelaySeconds: 10
            timeoutSeconds: 10
            periodSeconds: 5
            successThreshold: 2
            failureThreshold: 5
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - worker
                        - sentry-kafka
                topologyKey: kubernetes.io/hostname
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
